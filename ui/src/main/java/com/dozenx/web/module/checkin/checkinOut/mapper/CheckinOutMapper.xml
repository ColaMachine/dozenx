<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dozenx.web.module.checkin.checkinOut.dao.CheckinOutMapper">
    <resultMap id="BaseResultMap" type="com.dozenx.web.module.checkin.checkinOut.bean.CheckinOut">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="userId" jdbcType="BIGINT" property="userId"/>
        <result column="checkType" jdbcType="INTEGER" property="checkType"/>
        <result column="checkTime" jdbcType="TIMESTAMP" property="checkTime"/>
    </resultMap>

    <resultMap id="SysUser" type="com.dozenx.web.core.auth.sysUser.bean.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nkname" jdbcType="VARCHAR" property="nkname"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="telno" jdbcType="VARCHAR" property="telno"/>
        <result column="idcard" jdbcType="VARCHAR" property="idcard"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="province" jdbcType="INTEGER" property="province"/>
        <result column="city" jdbcType="INTEGER" property="city"/>
        <result column="county" jdbcType="INTEGER" property="county"/>
        <result column="birth" jdbcType="DATE" property="birth"/>
        <result column="integral" jdbcType="INTEGER" property="integral"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="wechat" jdbcType="VARCHAR" property="wechat"/>
        <result column="qq" jdbcType="BIGINT" property="qq"/>
        <result column="face" jdbcType="VARCHAR" property="face"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="account" jdbcType="VARCHAR" property="account"/>
        <result column="outId" jdbcType="BIGINT" property="outId"/>
    </resultMap>
    <sql id="Base_Column_List">
        CheckinOut.`id` ,CheckinOut.`userId` ,CheckinOut.`checkType` ,CheckinOut.`checkTime`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CheckinOut
        where CheckinOut.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from CheckinOut
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.dozenx.web.module.checkin.checkinOut.bean.CheckinOut">

        insert into CheckinOut (<include refid="Base_Column_List"/>)
        values (
        #{id,jdbcType=BIGINT}
        ,#{userId,jdbcType=BIGINT}
        ,#{checkType,jdbcType=INTEGER}
        ,#{checkTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.dozenx.web.module.checkin.checkinOut.bean.CheckinOut">
        insert into CheckinOut
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id`,
            </if>
            <if test="userId != null">
                `userId`,
            </if>
            <if test="checkType != null">
                `checkType`,
            </if>
            <if test="checkTime != null">
                `checkTime`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="checkType != null">
                #{checkType,jdbcType=INTEGER},
            </if>
            <if test="checkTime != null">
                #{checkTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dozenx.web.module.checkin.checkinOut.bean.CheckinOut">
        update CheckinOut
        <set>
            <if test="id != null">
                `id`=#{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                `userId`=#{userId,jdbcType=BIGINT},
            </if>
            <if test="checkType != null">
                `checkType`=#{checkType,jdbcType=INTEGER},
            </if>
            <if test="checkTime != null">
                `checkTime`=#{checkTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dozenx.web.module.checkin.checkinOut.bean.CheckinOut">
        update CheckinOut
        set
        `userId`=#{userId,jdbcType=BIGINT},
        `checkType`=#{checkType,jdbcType=INTEGER},
        `checkTime`=#{checkTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="listByParams" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CheckinOut where 1=1
        <if test="id != null and id != '' ">
            and `id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            and `userId` = #{userId}
        </if>
        <if test="checkType != null and checkType != '' ">
            and `checkType` = #{checkType}
        </if>
        <if test="checkTime != null and checkTime != '' ">
            and `checkTime` = #{checkTime}
        </if>

        <if test="checkTimeBegin != null and checkTimeBegin != '' ">
            and `checkTime` &gt;= #{checkTimeBegin}
        </if>

        <if test="checkTimeEnd != null and checkTimeEnd != '' ">
            and `checkTime` &lt;= #{checkTimeEnd}
        </if>
    </select>
    <select id="listByParams4Page" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from CheckinOut

        where 1=1
        <if test="id != null and id != '' ">
            and CheckinOut.`id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            and CheckinOut.`userId` = #{userId}
        </if>
        <if test="checkType != null and checkType != '' ">
            and CheckinOut.`checkType` = #{checkType}
        </if>
        <if test="checkTime != null and checkTime != '' ">
            and CheckinOut.`checkTime` = #{checkTime}
        </if>
    </select>
    <select id="countByParams" parameterType="map" resultType="java.lang.Integer">
        select
        count(1)
        from CheckinOut where 1=1
        <if test="id != null and id != '' ">
            and CheckinOut.`id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            and CheckinOut.`userId` = #{userId}
        </if>
        <if test="checkType != null and checkType != '' ">
            and CheckinOut.`checkType` = #{checkType}
        </if>
        <if test="checkTime != null and checkTime != '' ">
            and CheckinOut.`checkTime` = #{checkTime}
        </if>
    </select>
    <select id="countByOrParams" parameterType="map" resultType="java.lang.Integer">
        select
        count(1)
        from CheckinOut where 1!=1
        <if test="id != null and id != '' ">
            or `id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            or `userId` = #{userId}
        </if>
        <if test="checkType != null and checkType != '' ">
            or `checkType` = #{checkType}
        </if>
        <if test="checkTime != null and checkTime != '' ">
            or `checkTime` = #{checkTime}
        </if>
    </select>
    <select id="listUsersNotCheckIn" resultMap="SysUser">
        select * from sys_user user where type =3 and userid
        not in( select distinct(userid) from CheckinOut where checktime between #{0} and #{1} )
    </select>
    <select id="listUsersNotCheckInMachineAndCamera" resultMap="SysUser">
        select * from sys_user su where su.outId is not null and status=1
        and
        not exists (select * from CheckinOut where userId= su.outId and checkTime between #{0} and #{1})
        and not exists (select * from FaceCheckinOut where userId= su.id and checkTime between #{0} and #{1})
    </select>
</mapper>
