<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dozenx.web.module.checkin.faceInfo.dao.FaceInfoMapper">
    <resultMap id="BaseResultMap" type="com.dozenx.web.module.checkin.faceInfo.bean.FaceInfo">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="userId" jdbcType="BIGINT" property="userId" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="face" jdbcType="LONGVARCHAR" property="face" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="abs_path" jdbcType="VARCHAR" property="absPath" />
        <result column="out_id" jdbcType="VARCHAR" property="outId" />
    </resultMap>
    <sql id="Base_Column_List">
        FaceInfo.`id` ,FaceInfo.`userId` ,FaceInfo.`url` ,FaceInfo.`face` ,FaceInfo.`remark` ,FaceInfo.`name`,FaceInfo.`abs_path`,FaceInfo.`out_id`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from FaceInfo
        where FaceInfo.id =   #{id,jdbcType=BIGINT}
    </select>

    <select id="getByOutId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from FaceInfo
        where FaceInfo.out_id =   #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from FaceInfo
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id"   parameterType="com.dozenx.web.module.checkin.faceInfo.bean.FaceInfo" >

        insert into FaceInfo (  <include refid="Base_Column_List" />)
        values (
        #{id,jdbcType=BIGINT}
        ,#{userId,jdbcType=BIGINT}
        ,#{url,jdbcType=VARCHAR}
        ,#{face,jdbcType=LONGVARCHAR}
        ,#{remark,jdbcType=VARCHAR}
        ,#{name,jdbcType=VARCHAR}
        ,#{absPath,jdbcType=VARCHAR}
        ,#{outId,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.dozenx.web.module.checkin.faceInfo.bean.FaceInfo" >
        insert into FaceInfo
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                `id`,
            </if>
            <if test="userId != null" >
                `userId`,
            </if>
            <if test="url != null" >
                `url`,
            </if>
            <if test="face != null" >
                `face`,
            </if>
            <if test="remark != null" >
                `remark`,
            </if>
            <if test="name != null" >
                `name`,
            </if>
            <if test="outId != null" >
                `out_id`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="url != null" >
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="face != null" >
                #{face,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="outId != null" >
                #{outId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dozenx.web.module.checkin.faceInfo.bean.FaceInfo" >
        update FaceInfo
        <set >
            <if test="id != null" >
                `id`=#{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null" >
                `userId`=#{userId,jdbcType=BIGINT},
            </if>
            <if test="url != null" >
                `url`=#{url,jdbcType=VARCHAR},
            </if>
            <if test="face != null" >
                `face`=#{face,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null" >
                `remark`=#{remark,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                `name`=#{name,jdbcType=VARCHAR},
            </if>
            <if test="outId != null" >
                `out_id`=#{outId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dozenx.web.module.checkin.faceInfo.bean.FaceInfo" >
        update FaceInfo
        set
        `userId`=#{userId,jdbcType=BIGINT},
        `url`=#{url,jdbcType=VARCHAR},
        `face`=#{face,jdbcType=LONGVARCHAR},
        `remark`=#{remark,jdbcType=VARCHAR},
        `name`=#{name,jdbcType=VARCHAR},
        `out_id`=#{name,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="listByParams" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from FaceInfo where 1=1
        <if test="id != null and id != '' ">
            and `id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            and `userId` = #{userId}
        </if>
        <if test="url != null and url != '' ">
            and `url` = #{url}
        </if>
        <if test="urlLike != null and urlLike != '' ">
            and `url` like CONCAT('%',#{urlLike},'%')
        </if>
        <if test="face != null and face != '' ">
            and `face` = #{face}
        </if>
        <if test="remark != null and remark != '' ">
            and `remark` = #{remark}
        </if>
        <if test="remarkLike != null and remarkLike != '' ">
            and `remark` like CONCAT('%',#{remarkLike},'%')
        </if>
        <if test="name != null and name != '' ">
            and `name` = #{name}
        </if>
        <if test="nameLike != null and nameLike != '' ">
            and `name` like CONCAT('%',#{nameLike},'%')
        </if>
    </select>
    <select id="listByParams4Page" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from FaceInfo

        where 1=1
        <if test="id != null and id != '' ">
            and FaceInfo.`id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            and FaceInfo.`userId` = #{userId}
        </if>
        <if test="url != null and url != '' ">
            and FaceInfo.`url` = #{url}
        </if>
        <if test="urlLike != null and urlLike != '' ">
            and FaceInfo.`url` like CONCAT('%',#{urlLike},'%')
        </if>
        <if test="face != null and face != '' ">
            and FaceInfo.`face` = #{face}
        </if>
        <if test="remark != null and remark != '' ">
            and FaceInfo.`remark` = #{remark}
        </if>
        <if test="remarkLike != null and remarkLike != '' ">
            and FaceInfo.`remark` like CONCAT('%',#{remarkLike},'%')
        </if>
        <if test="name != null and name != '' ">
            and FaceInfo.`name` = #{name}
        </if>
        <if test="nameLike != null and nameLike != '' ">
            and FaceInfo.`name` like CONCAT('%',#{nameLike},'%')
        </if>
    </select>
    <select id="countByParams" parameterType="map" resultType="java.lang.Integer">
        select
        count(1)
        from FaceInfo where 1=1
        <if test="id != null and id != '' ">
            and FaceInfo.`id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            and FaceInfo.`userId` = #{userId}
        </if>
        <if test="url != null and url != '' ">
            and FaceInfo.`url` = #{url}
        </if>
        <if test="urlLike != null and urlLike != '' ">
            and FaceInfo.`url` like CONCAT('%',#{urlLike},'%')
        </if>
        <if test="face != null and face != '' ">
            and FaceInfo.`face` = #{face}
        </if>
        <if test="remark != null and remark != '' ">
            and FaceInfo.`remark` = #{remark}
        </if>
        <if test="remarkLike != null and remarkLike != '' ">
            and FaceInfo.`remark` like CONCAT('%',#{remarkLike},'%')
        </if>
        <if test="name != null and name != '' ">
            and FaceInfo.`name` = #{name}
        </if>
        <if test="nameLike != null and nameLike != '' ">
            and FaceInfo.`name` like CONCAT('%',#{nameLike},'%')
        </if>
    </select>
    <select id="countByOrParams" parameterType="map" resultType="java.lang.Integer">
        select
        count(1)
        from FaceInfo where 1!=1
        <if test="id != null and id != '' ">
            or `id` = #{id}
        </if>
        <if test="userId != null and userId != '' ">
            or `userId` = #{userId}
        </if>
        <if test="url != null and url != '' ">
            or `url` = #{url}
        </if>
        <if test="face != null and face != '' ">
            or `face` = #{face}
        </if>
        <if test="remark != null and remark != '' ">
            or `remark` = #{remark}
        </if>
        <if test="name != null and name != '' ">
            or `name` = #{name}
        </if>
    </select>



    <insert id="insertBatch"   parameterType="java.util.List" >
        insert into FaceInfo (  <include refid="Base_Column_List" />)
        values

        <foreach collection ="list" item="record" index= "index" separator =",">
            (
            #{record.id,jdbcType=BIGINT}
            ,#{record.userId,jdbcType=BIGINT}
            ,#{record.url,jdbcType=VARCHAR}
            ,#{record.face,jdbcType=LONGVARCHAR}
            ,#{record.remark,jdbcType=VARCHAR}
            ,#{record.name,jdbcType=VARCHAR}
            )
        </foreach >
    </insert>
</mapper>
