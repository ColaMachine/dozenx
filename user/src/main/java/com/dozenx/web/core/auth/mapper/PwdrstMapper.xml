<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dozenx.web.core.auth.dao.PwdrstMapper">
 	
<!--  新增记录  --> 
	<resultMap type="com.dozenx.web.core.auth.bean.Pwdrst" id="pwdrstMap">
	 <id property="idpwdrst" column="idpwdrst"  jdbcType="VARCHAR" />
   		<result property="userid" column="userid"  jdbcType="BIGINT" />

 		<result property="used" column="used" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="resettime" jdbcType="TIMESTAMP" property="resettime" />

   </resultMap>
  	<insert id="insertPwdrst" parameterType="com.dozenx.web.core.auth.bean.Pwdrst">
  		insert into pwdrst(idpwdrst,userid,createtime,used) values(#{idpwdrst},#{userid},#{createtime},#{used})
  	</insert>
  	
<!--  查询单条记录	-->
	<select id="selectPwdrstById" parameterType="string" resultType="com.dozenx.web.core.auth.bean.Pwdrst">
		select * from pwdrst  where idpwdrst = #{idpwdrst}
  	</select>
  	
  <select id="selectUnusedPwdrstByUserId" parameterType="java.lang.Long" resultType="com.dozenx.web.core.auth.bean.Pwdrst">
		select * from pwdrst  where used=0 and userid=#{userid}
  	</select>
<!--  修改记录	-->
  	<update id="used" parameterType="string">
  		update pwdrst set used = 1 ,resettime=current_timestamp()  where idpwdrst = #{idpwdrst}
  	</update>
  	
<!--  查询所有记录，查询多条记录即返回结果是一个集合的时候，resultType不是集合类型，而是集合所包含的类型	-->
  
<!--  删除记录	-->
	<delete id="deletePwdrst" parameterType="java.lang.String">
		delete from pwdrst where idpwdrst = #{idpwdrst}
	</delete>
</mapper>